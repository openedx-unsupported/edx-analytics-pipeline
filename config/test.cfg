# Safe defaults that can be used by unit and acceptance tests.

[hive]
release = apache
version = 1.0
database = default
warehouse_path = s3://fake/warehouse/

[database-export]
database = to_database
credentials = s3://fake/credentials.json

[database-import]
database = from_database
credentials = s3://fake/credentials.json
destination = s3://fake/warehouse/

[map-reduce]
engine = hadoop
marker = s3://fake/marker/
remote_log_level = DEBUG

[event-logs]
pattern = .*tracking.log-(?P<date>\d{8}).*\.gz
          .*tracking.notalog-(?P<date>\d{8}).*\.gz
expand_interval = 2 days
source = s3://fake/input/
         s3://fake/input2/

[segment-logs]
pattern = .*segment.log-(?P<date>\d{8}).*\.gz
          .*segment.notalog-(?P<date>\d{8}).*\.gz
source = s3://fake/segment/input/
         s3://fake/segment/input2/

[event-export]
output_root = s3://fake/
environment = unittest
config = s3://fake/event_export/config.yaml
gpg_key_dir = s3://fake/event_export/gpg-keys/
gpg_master_key = master@key.org
required_path_text = FakeServerGroup

[event-export-course]
output_root = s3://fake/

[obfuscation]
explicit_event_whitelist = explicit_events.tsv
xblock_obfuscation_config = xblock_obfuscation_config.yml

[id-codec]
seed_value = 42

[manifest]
threshold = 500
input_format = org.edx.hadoop.input.ManifestTextInputFormat
lib_jar = s3://fake/oddjob.jar
path = /tmp/fake/manifest/

[user-activity]
output_root = s3://fake/activity/
overwrite_n_days = 3

[enrollments]
interval_start = 2013-11-01
overwrite_n_days = 14

[location-per-course]
interval_start = 2013-11-01
overwrite_n_days = 14

[enrollment-reports]
src = s3://fake/input/
destination = s3://fake/enrollment_reports/output/
offsets = s3://fake/enrollment_reports/offsets.tsv
blacklist = s3://fake/enrollment_reports/course_blacklist.tsv
history = s3://fake/enrollment_reports/enrollment_history.tsv

[financial-reports]
shoppingcart-partners = {"OpenCraftX": "OCX", "DEFAULT": "edx"}

[geolocation]
geolocation_data = s3://fake/geo.dat

[calendar]
interval = 2012-01-01-2020-01-01

[course-catalog]
catalog_url = http://acceptance.test/api/courses/v2

[course-structure]
api_root_url = acceptance.test
access_token = acceptance

[vertica-export]
credentials = s3://fake/vertica_creds.json
schema = testing
read_timeout = 600
standard_roles = data_engineering_team
restricted_roles = data_engineering_team
business_intelligence_team_roles = data_engineering_team
event_retention_interval = 3 days

[payment-reconciliation]
transaction_source = s3://fake/warehouse/transactions
order_source = s3://fake/warehouse/orders
pattern = '*'

[paypal]
account_id = test
vendor = testvendor
password = notsosecret
user = testuser
partner = testpartner
url = http://test.api/endpoint
timeout = -1
interval_start = 2015-09-01

[cybersource:test]
username=testuser
password=notsosecret
host=test.cybersource.com/test
interval_start = 2015-09-01

[cybersource:empty_test]
username=testuser
password=notsosecret
host=test.cybersource.com/test
interval_start = 2015-09-01

[payment]
cybersource_merchant_ids = test
                           empty_test

[videos]
dropoff_threshold = 0.05
overwrite_n_days = 5

[module-engagement]
alias = roster
number_of_shards = 5

[course-catalog-api]
partner_short_codes = openedx
api_root_url = http://example.com/api/v1/

[ccx]
enabled = false

[run-vertica-sql-script]
schema = testing
read_timeout = 5

[edx-rest-api]
client_id = dummy_client_id
client_secret = dummy_client_secret
auth_url = http://localhost:8000/oauth2/access_token/
cache_root = /tmp/edx-rest-api

[problem_response]
report_output_root = /tmp/problem-response-reports/

[course-list]
api_root_url = http://localhost:8000/api/courses/v1/courses/

[course-blocks]
api_root_url = http://localhost:8000/api/courses/v1/blocks/
