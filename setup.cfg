[metadata]
name = edx.analytics.tasks
description-file = README.md

[global]
setup-hooks = pbr.hooks.setup_hook

[pbr]
skip_authors = True
skip_changelog = True

[files]
packages =
    edx
data_files =
    share/edx.analytics.tasks = share/*

[entry_points]
console_scripts =

    # launchers
    launch-task = edx.analytics.tasks.launchers.local:main
    remote-task = edx.analytics.tasks.launchers.remote:main

    # tools
    analyze-log = edx.analytics.tasks.tools.analyze.main:analyze
    s3util = edx.analytics.tasks.tools.s3util:main
    obfuscate-eval = edx.analytics.tasks.tools.obfuscate_eval:main
    debug-emr-logs = edx.analytics.tasks.tools.debug_emr_logs:main

edx.analytics.tasks =

    # common
    sqoop-import = edx.analytics.tasks.common.sqoop:SqoopImportFromMysql
    insert-into-table = edx.analytics.tasks.common.mysql_load:MysqlInsertTask
    bigquery-load = edx.analytics.tasks.common.bigquery_load:BigQueryLoadTask
    snowflake-load = edx.analytics.tasks.common.snowflake_load:SnowflakeLoadTask
    export-vertica-sqoop = edx.analytics.tasks.common.vertica_export:ExportVerticaTableToS3Task

    # insights
    answer-dist = edx.analytics.tasks.insights.answer_dist:AnswerDistributionPerCourse
    calendar = edx.analytics.tasks.insights.calendar_task:CalendarTableTask
    course_blocks = edx.analytics.tasks.insights.course_blocks:CourseBlocksApiDataTask
    course_list = edx.analytics.tasks.insights.course_list:CourseListApiDataTask
    database-import = edx.analytics.tasks.insights.database_imports:ImportAllDatabaseTablesTask
    engagement = edx.analytics.tasks.insights.module_engagement:ModuleEngagementDataTask
    enrollments = edx.analytics.tasks.insights.enrollments:ImportEnrollmentsIntoMysql
    location-per-course = edx.analytics.tasks.insights.location_per_course:LastCountryOfUser
    problem_response = edx.analytics.tasks.insights.problem_response:LatestProblemResponseDataTask
    tags-dist = edx.analytics.tasks.insights.tags_dist:TagsDistributionPerCourse
    user-activity = edx.analytics.tasks.insights.user_activity:InsertToMysqlCourseActivityTask
    video = edx.analytics.tasks.insights.video:InsertToMysqlAllVideoTask

    # data_api
    grade-dist = edx.analytics.tasks.data_api.studentmodule_dist:GradeDistFromSqoopToMySQLWorkflow
    student_engagement = edx.analytics.tasks.data_api.student_engagement:StudentEngagementTask

    # warehouse:
    event-type-dist = edx.analytics.tasks.warehouse.event_type_dist:PushToVerticaEventTypeDistributionTask
    load-course-catalog = edx.analytics.tasks.warehouse.load_internal_reporting_course_catalog:PullDiscoveryCoursesAPIData
    load-d-certificates = edx.analytics.tasks.warehouse.load_internal_reporting_certificates:LoadInternalReportingCertificatesToWarehouse
    load-d-country = edx.analytics.tasks.warehouse.load_internal_reporting_country:LoadInternalReportingCountryToWarehouse
    load-d-user = edx.analytics.tasks.warehouse.load_internal_reporting_user:LoadInternalReportingUserToWarehouse
    load-d-user-course = edx.analytics.tasks.warehouse.load_internal_reporting_user_course:LoadUserCourseSummary
    load-events = edx.analytics.tasks.warehouse.load_internal_reporting_events:TrackingEventRecordDataTask
    load-f-user-activity = edx.analytics.tasks.warehouse.load_internal_reporting_user_activity:LoadInternalReportingUserActivityToWarehouse
    load-ga-permissions = edx.analytics.tasks.warehouse.load_ga_permissions:LoadGoogleAnalyticsPermissionsWorkflow
    load-google-sheet-vertica = edx.analytics.tasks.warehouse.load_google_sheet_to_warehouse:LoadGoogleSpreadsheetsToVerticaWorkflow
    load-google-sheet-snowflake = edx.analytics.tasks.warehouse.load_google_sheet_to_warehouse:LoadGoogleSpreadsheetsToSnowflakeWorkflow
    load-insights= edx.analytics.tasks.warehouse.load_warehouse_insights:LoadInsightsTableToVertica
    load-internal-active-users = edx.analytics.tasks.warehouse.load_internal_reporting_active_users:LoadInternalReportingActiveUsersToWarehouse
    load-internal-course-structure = edx.analytics.tasks.warehouse.load_internal_reporting_course_structure:LoadCourseBlockRecordToVertica
    load-internal-database = edx.analytics.tasks.warehouse.load_internal_reporting_database:ImportMysqlDatabaseFromS3ToVerticaSchemaTask
    load-vertica-schema-snowflake = edx.analytics.tasks.warehouse.load_vertica_schema_to_snowflake:LoadVerticaSchemaFromS3ToSnowflakeTask
    load-vertica-schema-bigquery = edx.analytics.tasks.warehouse.load_vertica_schema_to_bigquery:LoadVerticaSchemaFromS3ToBigQueryTask
    load-warehouse = edx.analytics.tasks.warehouse.load_warehouse:LoadWarehouseWorkflow
    load-warehouse-bigquery=edx.analytics.tasks.warehouse.load_warehouse_bigquery:LoadWarehouseBigQueryTask
    load-warehouse-snowflake=edx.analytics.tasks.warehouse.load_warehouse_snowflake:LoadWarehouseSnowflakeTask
    push_to_vertica_lms_courseware_link_clicked = edx.analytics.tasks.warehouse.lms_courseware_link_clicked:PushToVerticaLMSCoursewareLinkClickedTask
    run-vertica-sql-script = edx.analytics.tasks.warehouse.run_vertica_sql_script:RunVerticaSqlScriptTask
    run-vertica-sql-scripts = edx.analytics.tasks.warehouse.run_vertica_sql_scripts:RunVerticaSqlScriptTask

    # financial:
    cybersource = edx.analytics.tasks.warehouse.financial.cybersource:DailyPullFromCybersourceTask
    ed_services_report = edx.analytics.tasks.warehouse.financial.ed_services_financial_report:BuildEdServicesReportTask
    financial_reports  = edx.analytics.tasks.warehouse.financial.finance_reports:BuildFinancialReportsTask
    orders = edx.analytics.tasks.warehouse.financial.orders_import:OrderTableTask
    payment_reconcile = edx.analytics.tasks.warehouse.financial.reconcile:ReconcileOrdersAndTransactionsTask
    paypal = edx.analytics.tasks.warehouse.financial.paypal:PaypalTransactionsByDayTask
    paypal-report = edx.analytics.tasks.warehouse.financial.paypal_ftpreport:LoadPayPalCaseReportToVertica
    affiliate_window = edx.analytics.tasks.warehouse.financial.fees:LoadFeesToWarehouse

    # export:
    data_obfuscation   = edx.analytics.tasks.export.data_obfuscation:ObfuscatedCourseDumpTask
    dump-student-module = edx.analytics.tasks.export.database_exports:StudentModulePerCourseTask
    events_obfuscation = edx.analytics.tasks.export.events_obfuscation:ObfuscateCourseEventsTask
    export-events = edx.analytics.tasks.export.event_exports:EventExportTask
    export-events-by-course = edx.analytics.tasks.export.event_exports_by_course:EventExportByCourseTask
    export-student-module = edx.analytics.tasks.export.database_exports:StudentModulePerCourseAfterImportWorkflow
    obfuscation = edx.analytics.tasks.export.obfuscation:ObfuscatedCourseTask

    # monitor:
    all_events_report = edx.analytics.tasks.monitor.total_events_report:TotalEventsReportWorkflow
    enrollment_validation = edx.analytics.tasks.monitor.enrollment_validation:CourseEnrollmentValidationTask
    overall_events = edx.analytics.tasks.monitor.overall_events:TotalEventsDailyTask
    noop = edx.analytics.tasks.monitor.performance:ParseEventLogPerformanceTask

    # enterprise:
    enterprise_enrollments = edx.analytics.tasks.enterprise.enterprise_enrollments:ImportEnterpriseEnrollmentsIntoMysql
    enterprise_user = edx.analytics.tasks.enterprise.enterprise_user:ImportEnterpriseUsersIntoMysql

mapreduce.engine =
    hadoop = edx.analytics.tasks.common.mapreduce:MapReduceJobRunner
    local = luigi.contrib.hadoop:LocalJobRunner
    emu = edx.analytics.tasks.common.mapreduce:EmulatedMapReduceJobRunner

[pycodestyle]
ignore=E501,E731
max_line_length=119
